{
  "$schema": "http://json.schemastore.org/template",
  "author": "Arcus",
  "classifications": [
    "WebAPI",
    "API",
    "BoilerPlate"
  ],
  "name": "Arcus WebAPI",
  "identity": "Arcus.Templates.WebApi",
  "shortName": "arcus-webapi",
  "sourceName": "Arcus.Templates.WebApi",
  "tags": {
    "language": "C#",
    "type": "project"
  },
  "sources": [
    {
      "exclude": [
        "**/[Bb]in/**",
        "**/[Oo]bj/**",
        ".template.config/**/*",
        "**/*.filelist",
        "**/*.user",
        "**/*.lock.json",
        "**/launchSettings.json",
        "*Open-Api.xml"
      ],
      "modifiers": [
        {
          "condition": "!(AppSettings)",
          "exclude": [
            "appsettings*.json"
          ]
        }
      ]
    }
  ],
  "symbols": {
    "AuthoringMode": {
      "type": "generated",
      "generator": "constant",
      "parameters": {
        "value": false
      }
    },
    "IfDebug": {
      "type": "generated",
      "generator": "constant",
      "parameters": {
        "value": "#if DEBUG"
      },
      "replaces": "//#if DEBUG"
    },
    "EndIf": {
      "type": "generated",
      "generator": "constant",
      "parameters": {
        "value": "#endif"
      },
      "replaces": "//#endif"
    },
    "authentication": {
      "type": "parameter",
      "datatype": "choice",
      "choices": [
        {
          "choice": "SharedAccessKey",
          "description": "Adds a shared access key authentication mechanism to the web API project"
        },
        {
          "choice": "Certificate",
          "description": "Adds a client certificate authentication mechanism to the web API project"
        },
        {
          "choice": "None",
          "description": "No authentication mechanism is added to the web API project"
        }
      ],
      "defaultValue": "None",
      "description": "Choose whether to use an authentication mechanism and which authentication to use"
    },
    "NoneAuth": {
      "type": "computed",
      "value": "(authentication == \"None\")"
    },
    "Auth": {
      "type": "computed",
      "value": "(authentication != \"None\")"
    },
    "SharedAccessKeyAuth": {
      "type": "computed",
      "value": "(authentication == \"SharedAccessKey\")"
    },
    "CertificateAuth": {
      "type": "computed",
      "value": "(authentication == \"Certificate\")"
    },
    "AppSettings": {
      "type": "computed",
      "value": "CertificateAuth"
    }
  }
}