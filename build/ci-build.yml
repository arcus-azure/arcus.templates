name: $(date:yyyyMMdd)$(rev:.r)

trigger:
  branches:
    include:
      - master
  paths:
    include:
      - src/*

pr:
  paths:
    include:
      - src/*
      - build/ci-build.yml

resources:
  repositories:
    - repository: templates
      type: github
      name: arcus-azure/azure-devops-templates
      endpoint: arcus-azure

variables:
  - group: 'Build Configuration'
  - group: 'Arcus Web Api - Integration Testing'
  # We are re-using the Event Grid integration infrastructure
  - group: 'Arcus Messaging - Integration Testing'
  - name: 'DotNet.Sdk.Version'
    value: '3.0.101'
  # Backwards compatible .NET SDK version
  - name: 'DotNet.Sdk.VersionBC'
    value: '2.2.105'
  - name: 'Project'
    value: 'Arcus.Templates'
  - name: 'Http.Port'
    value: '5000'
  - name: 'Arcus.Api.BaseUrl'
    value: 'http://localhost:$(Http.Port)/api/v1'
  - name: 'Arcus.ServiceBus.Queue.Worker.HealthPort'
    value: '42065'
  - name: 'Arcus.ServiceBus.Topic.Worker.HealthPort'
    value: '42066'
  # 'Package.Version.ManualTrigger' is added as queue-time variable on build in Azure DevOps

stages:
  - stage: Build
    jobs:
      - job: Compile
        pool:
          vmImage: 'ubuntu-16.04'
        steps:
          - template: nuget/determine-pr-version.yml@templates
            parameters:
              manualTriggerVersion: $(Package.Version.ManualTrigger)
          - template: 'build/build-solution.yml@templates'
            parameters:
              dotnetSdkVersion: '$(DotNet.Sdk.Version)'
              versionSuffix: '$(packageVersion)'
          - task: CopyFiles@2
            displayName: 'Copy build artifacts'
            inputs:
              contents: '**/bin/**/*.nupkg'
              targetFolder: '$(Pipeline.Workspace)/templates'
              flattenFolders: true
          - task: PublishPipelineArtifact@0
            displayName: 'Publish build artifacts'
            inputs:
              targetPath: '$(Pipeline.Workspace)/templates'
              artifactName: Templates

  - template: 'templates/docker-integration-tests.yml'
    
  - stage: SelfContainingIntegrationTests
    displayName: Self-Containing Integration Tests
    dependsOn: Build
    condition: succeeded()
    jobs:
      - job: RunIntegrationTests
        displayName: 'Run integration tests'
        pool:
          vmImage: 'ubuntu-16.04'
        steps:
          - task: UseDotNet@2
            displayName: 'Import .NET Core SDK ($(DotNet.Sdk.VersionBC))'
            inputs:
              packageType: 'sdk'
              version: '$(DotNet.Sdk.VersionBC)'
          - template: test/run-integration-tests.yml@templates
            parameters:
              dotnetSdkVersion: '$(DotNet.Sdk.Version)'
              projectName: '$(Project).Tests.Integration'
              category: 'Integration'

  - stage: ReleaseToMyget
    displayName: 'Release to MyGet'
    dependsOn:
      - DockerIntegrationTests
      - SelfContainingIntegrationTests
    condition: succeeded()
    jobs:
      - job: PushToMyGet
        displayName: 'Push to MyGet'
        pool:
          vmImage: 'ubuntu-16.04'
        steps:
          - task: DownloadPipelineArtifact@2
            displayName: 'Download build artifacts'
            inputs:
              artifact: 'Templates'
              path: '$(Build.SourcesDirectory)/templates'
          - template: nuget/publish-preview-package.yml@templates
            parameters:
              packagesToPush: 'templates/*.nupkg'
