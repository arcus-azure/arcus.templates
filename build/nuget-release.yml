name: $(Package.Version)

trigger: none
pr: none

parameters:
  - name: 'Package.Version'
    type: 'string'

resources:
  repositories:
    - repository: templates
      type: github
      name: arcus-azure/azure-devops-templates
      endpoint: arcus-azure

variables:
  - group: 'Build Configuration'
  - group: 'Arcus Web Api - Integration Testing'
  # We are re-using the Event Grid integration infrastructure
  - group: 'Arcus Messaging - Integration Testing'
  - template: ./variables/build.yml
  - template: ./variables/test.yml
  - name: 'Package.Version'
    value: ${{ parameters['Package.Version'] }}

stages:
  - stage: Build
    jobs:
      - job: Compile
        pool:
          vmImage: 'ubuntu-16.04'
        steps:
          - task: qetza.replacetokens.replacetokens-task.replacetokens@3
            displayName: 'Replace .template.json version'
            inputs:
              rootDirectory: 'src/'
              targetFiles: '**\template.json'
              encoding: 'auto'
              verbosity: 'detailed'
              writeBOM: true
              actionOnMissing: 'fail'
              keepToken: false
              tokenPrefix: '#{'
              tokenSuffix: '}#'
          - template: build/build-solution.yml@templates
            parameters:
              dotnetSdkVersion: '$(DotNet.Sdk.Version)'
              version: $(Build.BuildNumber)
          - task: CopyFiles@2
            displayName: 'Copy build artifacts'
            inputs:
              contents: '**/bin/**/*.nupkg'
              targetFolder: '$(Pipeline.Workspace)/templates'
              flattenFolders: true
          - task: PublishPipelineArtifact@0
            displayName: 'Publish build artifacts'
            inputs:
              targetPath: '$(Pipeline.Workspace)/templates'
              artifactName: Templates

  - template: 'templates/docker-integration-tests.yml'

  - stage: SelfContainingIntegrationTests
    displayName: Self-Containing Integration Tests
    dependsOn: Build
    condition: succeeded()
    jobs:
      - job: RunIntegrationTests
        displayName: 'Run integration tests'
        pool:
          vmImage: 'ubuntu-16.04'
        steps:
          - template: test/run-integration-tests.yml@templates
            parameters:
              dotnetSdkVersion: '$(DotNet.Sdk.Version)'
              projectName: '$(Project).Tests.Integration'
              category: 'Integration'

  - stage: Release
    displayName: 'Release to NuGet.org'
    dependsOn: [SelfContainingIntegrationTests, DockerIntegrationTests]
    condition: succeeded()
    jobs:
      - job: PushToNuGet
        displayName: 'Push to NuGet.org'
        pool:
          vmImage: 'ubuntu-16.04'
        steps:
          - task: DownloadPipelineArtifact@2
            displayName: 'Download build artifacts'
            inputs:
              artifact: 'Templates'
              path: '$(Build.SourcesDirectory)/templates'
          - template: github/create-release.yml@templates
            parameters:
              repositoryName: 'arcus-azure/arcus.templates'
              releaseNotes: |
                Install new version via [NuGet](https://www.nuget.org/packages/Arcus.Templates.WebApi/$(Build.BuildNumber))
                ```shell
                > dotnet new --install Arcus.Templates.WebApi::$(Build.BuildNumber)
                ```

                Install new version via [NuGet](https://www.nuget.org/packages/Arcus.Templates.ServiceBus.Queue/$(Build.BuildNumber))
                ```shell
                > dotnet new --install Arcus.Templates.ServiceBus.Queue::$(Build.BuildNumber)
                ```

                Install new version via [NuGet](https://www.nuget.org/packages/Arcus.Templates.ServiceBus.Topic/$(Build.BuildNumber))
                ```shell
                > dotnet new --install Arcus.Templates.ServiceBus.Topic::$(Build.BuildNumber)
                ```
          - template: 'nuget/publish-official-package.yml@templates'
            parameters:
              packagesToPush: 'templates/*.nupkg'
